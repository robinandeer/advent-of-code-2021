{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Day 5"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "type Line = [[number, number], [number, number]];\n\ninterface Point {\n  overlaps: number;\n}"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const testLines: Array<Line> = [\n  [\n    [0, 9],\n    [5, 9],\n  ],\n  [\n    [8, 0],\n    [0, 8],\n  ],\n  [\n    [9, 4],\n    [3, 4],\n  ],\n  [\n    [2, 2],\n    [2, 1],\n  ],\n  [\n    [7, 0],\n    [7, 4],\n  ],\n  [\n    [6, 4],\n    [2, 0],\n  ],\n  [\n    [0, 9],\n    [2, 9],\n  ],\n  [\n    [3, 4],\n    [1, 4],\n  ],\n  [\n    [0, 0],\n    [8, 8],\n  ],\n  [\n    [5, 5],\n    [8, 2],\n  ],\n];"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "type Matrix = Array<Array<number>>;\n\nfunction calculateDoubleOverlaps(matrix: Matrix) {\n  return matrix\n    .map((row) =>\n      row.filter((point) => point > 1).reduce((total) => total + 1, 0)\n    )\n    .reduce((total, rowTotal) => total + rowTotal, 0);\n}\n\nfunction initializeMatrix(dimension: number): Matrix {\n  return new Array(dimension)\n    .fill(0)\n    .map(() => new Array(dimension).fill(0));\n}\n\nfunction fillInOverlaps(matrix: Matrix, lines: Array<Line>) {\n  lines.forEach((line) => {\n    const [start, end] = line;\n    const [x1, y1] = start;\n    const [x2, y2] = end;\n\n    const diffX = Math.abs(x1 - x2);\n    const diffY = Math.abs(y1 - y2);\n\n    const stepX = x1 < x2 ? 1 : -1;\n    const stepY = y1 < y2 ? 1 : -1;\n\n    let x = x1;\n    let y = y1;\n\n    if (diffX > 0 && diffY === 0) {\n      for (const _ of Array(diffX + 1)) {\n        matrix[y][x]++;\n        x += stepX;\n      }\n    } else if (diffY > 0 && diffX === 0) {\n      for (const _ of Array(diffY + 1)) {\n        matrix[y][x]++;\n        y += stepY;\n      }\n    } else {\n      const max = Math.max(diffX, diffY);\n\n      for (const _ of Array(max + 1)) {\n        matrix[y][x]++;\n        x += stepX;\n        y += stepY;\n      }\n    }\n  });\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Test Data"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const matrix = initializeMatrix(10)\nfillInOverlaps(matrix, testLines)\ncalculateDoubleOverlaps(matrix)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m12\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Part 1"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const part1Lines: Array<Line> = [\n  [[284,294], [733,743]],\n[[625,347], [653,375]],\n[[561,848], [561,181]],\n[[836,102], [836,339]],\n[[946,941], [22,17]],\n[[18,954], [956,16]],\n[[370,142], [370,700]],\n[[990,966], [677,966]],\n[[366,603], [366,465]],\n[[728,942], [57,271]],\n[[615,493], [847,493]],\n[[584,281], [301,281]],\n[[125,356], [301,180]],\n[[941,569], [555,183]],\n[[151,116], [509,116]],\n[[41,18], [841,818]],\n[[627,670], [627,630]],\n[[965,472], [965,100]],\n[[93,404], [330,641]],\n[[475,963], [475,514]],\n[[389,389], [389,326]],\n[[842,565], [842,576]],\n[[454,700], [650,700]],\n[[73,810], [73,319]],\n[[450,212], [450,284]],\n[[316,392], [316,697]],\n[[915,592], [578,592]],\n[[622,485], [434,485]],\n[[109,853], [952,10]],\n[[305,73], [305,222]],\n[[27,489], [157,489]],\n[[191,979], [867,979]],\n[[527,329], [527,292]],\n[[301,645], [301,162]],\n[[639,730], [176,730]],\n[[46,964], [46,458]],\n[[727,422], [435,714]],\n[[28,552], [404,552]],\n[[33,108], [33,21]],\n[[227,249], [327,249]],\n[[414,903], [784,903]],\n[[69,422], [888,422]],\n[[422,924], [103,605]],\n[[793,353], [450,10]],\n[[714,682], [714,972]],\n[[201,745], [410,745]],\n[[408,713], [408,847]],\n[[174,842], [818,198]],\n[[863,353], [775,353]],\n[[199,780], [670,780]],\n[[877,947], [340,410]],\n[[163,202], [163,91]],\n[[955,919], [955,585]],\n[[836,271], [533,271]],\n[[258,366], [728,836]],\n[[582,749], [582,12]],\n[[80,40], [80,704]],\n[[287,213], [287,635]],\n[[390,546], [390,194]],\n[[837,511], [538,810]],\n[[473,281], [902,281]],\n[[851,865], [731,745]],\n[[918,59], [445,532]],\n[[796,215], [796,248]],\n[[875,111], [604,111]],\n[[660,805], [538,805]],\n[[507,850], [145,850]],\n[[585,861], [585,52]],\n[[426,74], [700,348]],\n[[206,405], [529,405]],\n[[418,333], [418,17]],\n[[368,457], [33,792]],\n[[186,81], [957,852]],\n[[505,283], [113,283]],\n[[20,878], [462,878]],\n[[750,237], [69,918]],\n[[15,280], [358,623]],\n[[798,981], [500,683]],\n[[965,970], [22,970]],\n[[950,970], [148,970]],\n[[660,392], [660,884]],\n[[862,405], [862,527]],\n[[801,283], [801,361]],\n[[71,837], [136,837]],\n[[651,438], [945,144]],\n[[524,607], [614,517]],\n[[348,955], [138,955]],\n[[957,164], [404,717]],\n[[531,581], [454,504]],\n[[710,185], [710,271]],\n[[822,86], [822,966]],\n[[745,233], [490,488]],\n[[350,823], [663,823]],\n[[824,67], [447,444]],\n[[846,667], [796,617]],\n[[666,24], [666,906]],\n[[640,39], [640,145]],\n[[654,481], [985,481]],\n[[581,894], [416,729]],\n[[443,11], [697,11]],\n[[318,627], [799,146]],\n[[113,78], [891,856]],\n[[181,149], [179,151]],\n[[451,74], [451,262]],\n[[458,726], [314,726]],\n[[218,662], [533,662]],\n[[965,108], [527,108]],\n[[782,481], [896,367]],\n[[557,927], [557,938]],\n[[506,242], [941,677]],\n[[948,778], [948,629]],\n[[567,816], [567,956]],\n[[323,773], [323,364]],\n[[864,980], [864,12]],\n[[611,699], [611,886]],\n[[613,392], [901,104]],\n[[528,905], [156,905]],\n[[632,206], [798,40]],\n[[338,237], [919,818]],\n[[256,889], [11,644]],\n[[835,52], [55,832]],\n[[464,144], [322,144]],\n[[254,747], [254,509]],\n[[866,892], [866,916]],\n[[827,946], [30,149]],\n[[899,84], [177,806]],\n[[134,634], [357,634]],\n[[781,492], [244,492]],\n[[817,762], [817,976]],\n[[818,749], [818,860]],\n[[262,480], [263,480]],\n[[409,576], [409,698]],\n[[242,151], [981,890]],\n[[149,519], [149,557]],\n[[42,990], [42,930]],\n[[687,974], [50,337]],\n[[758,382], [465,382]],\n[[760,861], [760,934]],\n[[17,835], [17,915]],\n[[645,923], [645,648]],\n[[702,116], [72,746]],\n[[153,162], [955,964]],\n[[185,101], [918,834]],\n[[554,179], [554,353]],\n[[879,673], [879,949]],\n[[368,13], [368,512]],\n[[582,105], [591,114]],\n[[146,291], [600,745]],\n[[609,538], [930,538]],\n[[320,604], [320,146]],\n[[566,698], [443,575]],\n[[167,708], [844,31]],\n[[712,630], [712,421]],\n[[912,930], [64,82]],\n[[980,931], [87,38]],\n[[23,893], [888,28]],\n[[640,435], [676,435]],\n[[701,516], [190,516]],\n[[684,145], [62,767]],\n[[127,471], [91,435]],\n[[685,197], [78,197]],\n[[103,493], [103,522]],\n[[309,986], [309,850]],\n[[938,270], [938,300]],\n[[295,72], [354,72]],\n[[948,889], [948,455]],\n[[254,733], [254,175]],\n[[95,329], [942,329]],\n[[19,672], [19,445]],\n[[206,807], [206,934]],\n[[886,961], [886,690]],\n[[117,386], [117,292]],\n[[199,59], [668,528]],\n[[299,263], [299,878]],\n[[28,295], [638,905]],\n[[10,140], [276,406]],\n[[279,526], [921,526]],\n[[485,128], [856,499]],\n[[418,398], [186,398]],\n[[296,577], [296,521]],\n[[514,261], [10,765]],\n[[691,673], [776,758]],\n[[131,430], [152,430]],\n[[858,85], [62,85]],\n[[394,846], [270,970]],\n[[827,913], [827,376]],\n[[634,669], [910,669]],\n[[12,53], [945,986]],\n[[782,467], [782,421]],\n[[159,832], [109,832]],\n[[793,807], [79,93]],\n[[120,584], [356,584]],\n[[645,16], [645,355]],\n[[526,685], [217,376]],\n[[296,305], [296,929]],\n[[954,144], [954,839]],\n[[748,88], [103,733]],\n[[523,804], [473,754]],\n[[524,316], [524,756]],\n[[696,183], [912,183]],\n[[288,564], [55,797]],\n[[568,103], [568,348]],\n[[468,626], [682,412]],\n[[163,163], [961,961]],\n[[762,824], [27,89]],\n[[623,625], [32,34]],\n[[865,343], [490,718]],\n[[259,458], [259,33]],\n[[944,660], [944,176]],\n[[781,804], [826,759]],\n[[15,702], [15,553]],\n[[403,310], [918,825]],\n[[438,734], [835,734]],\n[[825,13], [825,245]],\n[[129,611], [370,611]],\n[[49,939], [172,939]],\n[[687,906], [687,532]],\n[[629,482], [273,126]],\n[[727,218], [424,218]],\n[[447,451], [233,451]],\n[[142,779], [813,779]],\n[[527,27], [527,804]],\n[[482,55], [482,200]],\n[[39,264], [806,264]],\n[[884,636], [458,636]],\n[[467,121], [199,389]],\n[[856,925], [856,666]],\n[[666,359], [378,359]],\n[[11,946], [705,946]],\n[[491,281], [940,730]],\n[[86,112], [918,944]],\n[[974,807], [974,707]],\n[[445,67], [914,536]],\n[[953,394], [953,822]],\n[[468,398], [157,87]],\n[[231,620], [231,646]],\n[[979,869], [979,911]],\n[[450,330], [450,79]],\n[[675,659], [617,659]],\n[[66,181], [66,723]],\n[[181,406], [181,192]],\n[[908,334], [908,526]],\n[[254,891], [282,891]],\n[[777,791], [127,141]],\n[[469,58], [694,58]],\n[[954,957], [566,569]],\n[[957,957], [123,123]],\n[[741,359], [741,986]],\n[[763,526], [763,101]],\n[[857,427], [600,170]],\n[[527,756], [490,719]],\n[[625,249], [397,249]],\n[[798,702], [712,702]],\n[[868,75], [868,853]],\n[[332,296], [332,629]],\n[[211,829], [100,940]],\n[[12,139], [12,218]],\n[[655,978], [655,242]],\n[[99,852], [855,96]],\n[[486,267], [486,855]],\n[[474,90], [474,244]],\n[[948,491], [186,491]],\n[[896,59], [278,677]],\n[[295,732], [629,732]],\n[[860,936], [860,556]],\n[[143,790], [143,26]],\n[[371,847], [395,847]],\n[[739,301], [739,44]],\n[[384,716], [748,716]],\n[[848,423], [848,923]],\n[[855,23], [218,660]],\n[[381,805], [381,438]],\n[[451,610], [91,610]],\n[[906,957], [191,957]],\n[[118,675], [169,675]],\n[[836,818], [95,818]],\n[[368,945], [825,488]],\n[[165,299], [899,299]],\n[[392,327], [926,861]],\n[[663,16], [131,548]],\n[[630,302], [888,302]],\n[[206,869], [206,331]],\n[[979,413], [979,204]],\n[[894,860], [62,28]],\n[[444,897], [962,379]],\n[[550,158], [550,885]],\n[[845,736], [811,736]],\n[[846,857], [12,857]],\n[[981,730], [981,154]],\n[[694,835], [88,835]],\n[[21,101], [21,385]],\n[[19,960], [964,15]],\n[[283,721], [450,721]],\n[[59,136], [758,835]],\n[[287,313], [719,313]],\n[[471,252], [849,630]],\n[[682,189], [168,189]],\n[[10,921], [774,157]],\n[[884,598], [884,540]],\n[[207,615], [207,443]],\n[[627,408], [67,408]],\n[[285,36], [285,792]],\n[[116,585], [254,585]],\n[[183,86], [183,702]],\n[[220,138], [868,138]],\n[[833,68], [286,615]],\n[[367,534], [766,534]],\n[[907,514], [621,228]],\n[[133,593], [133,581]],\n[[164,727], [768,123]],\n[[566,227], [566,555]],\n[[983,988], [105,110]],\n[[620,177], [620,821]],\n[[612,413], [612,176]],\n[[168,889], [168,210]],\n[[871,487], [559,175]],\n[[399,870], [761,870]],\n[[236,976], [582,630]],\n[[699,216], [699,887]],\n[[153,745], [790,745]],\n[[444,749], [444,257]],\n[[808,165], [939,165]],\n[[546,525], [95,976]],\n[[583,179], [373,389]],\n[[235,816], [840,816]],\n[[744,89], [832,89]],\n[[425,317], [465,357]],\n[[267,235], [114,82]],\n[[887,59], [572,374]],\n[[808,237], [808,626]],\n[[431,352], [400,383]],\n[[815,376], [815,905]],\n[[249,218], [989,958]],\n[[120,435], [357,198]],\n[[807,551], [490,234]],\n[[910,524], [910,725]],\n[[802,304], [447,659]],\n[[789,228], [678,339]],\n[[229,322], [52,322]],\n[[658,393], [506,393]],\n[[378,438], [378,569]],\n[[163,981], [473,671]],\n[[537,984], [935,586]],\n[[58,945], [966,37]],\n[[132,696], [565,263]],\n[[136,813], [136,284]],\n[[606,656], [298,348]],\n[[533,572], [673,712]],\n[[872,912], [301,341]],\n[[16,287], [16,613]],\n[[571,541], [980,950]],\n[[117,495], [35,495]],\n[[85,79], [682,676]],\n[[425,431], [117,739]],\n[[982,984], [10,12]],\n[[28,75], [431,478]],\n[[259,529], [259,436]],\n[[762,267], [170,859]],\n[[323,135], [929,741]],\n[[81,238], [561,718]],\n[[128,213], [876,961]],\n[[649,466], [649,540]],\n[[715,863], [119,863]],\n[[830,624], [794,660]],\n[[123,968], [977,114]],\n[[489,466], [489,811]],\n[[27,10], [980,963]],\n[[255,732], [255,484]],\n[[574,829], [431,829]],\n[[548,743], [22,217]],\n[[903,297], [903,763]],\n[[684,774], [64,154]],\n[[260,823], [683,823]],\n[[422,211], [422,826]],\n[[10,196], [988,196]],\n[[108,802], [15,802]],\n[[104,70], [104,452]],\n[[885,59], [885,36]],\n[[68,854], [68,774]],\n[[731,935], [731,718]],\n[[657,986], [617,986]],\n[[732,292], [732,32]],\n[[841,56], [841,83]],\n[[74,108], [862,896]],\n[[654,895], [323,895]],\n[[374,952], [374,217]],\n[[90,723], [750,63]],\n[[246,89], [911,754]],\n[[453,301], [755,301]],\n[[983,988], [23,28]],\n[[81,705], [133,757]],\n[[752,743], [752,397]],\n[[53,243], [449,639]],\n[[451,811], [451,187]],\n[[26,672], [26,699]],\n[[254,861], [943,861]],\n[[643,740], [643,966]],\n[[486,655], [149,318]],\n[[375,146], [375,973]],\n[[76,293], [103,293]],\n[[246,398], [246,248]],\n[[324,392], [595,121]],\n[[130,577], [131,577]],\n[[380,623], [549,454]],\n[[224,181], [985,942]],\n[[310,223], [310,594]],\n[[23,982], [23,738]],\n[[19,858], [832,858]],\n[[726,531], [726,578]],\n[[730,433], [196,433]],\n[[606,599], [242,599]],\n[[444,832], [444,238]],\n[[198,870], [47,870]],\n[[944,473], [795,473]],\n[[737,386], [178,945]],\n[[328,902], [328,644]],\n[[422,851], [567,851]],\n[[674,781], [215,781]],\n[[920,757], [302,757]],\n[[225,932], [640,517]],\n[[359,337], [791,337]],\n[[935,430], [935,262]],\n[[772,850], [280,358]],\n[[175,829], [175,451]],\n[[938,204], [234,908]],\n[[253,749], [308,749]],\n[[704,458], [468,458]],\n[[222,95], [743,616]],\n[[968,840], [123,840]],\n[[491,619], [491,889]],\n[[979,580], [979,459]],\n[[901,193], [171,923]],\n[[246,155], [246,680]],\n[[711,755], [247,755]],\n[[671,734], [475,734]],\n[[803,783], [129,109]],\n[[145,890], [920,115]],\n[[463,521], [463,700]],\n[[782,99], [782,311]],\n[[547,467], [630,467]],\n[[14,88], [795,869]],\n[[653,899], [653,90]],\n[[488,874], [488,570]],\n[[93,879], [645,327]],\n[[320,658], [40,938]],\n[[611,246], [611,22]],\n[[258,935], [258,829]],\n[[931,436], [931,263]],\n[[252,460], [252,461]],\n[[490,382], [965,382]],\n[[242,89], [242,617]],\n[[271,111], [595,435]],\n[[462,706], [242,486]],\n[[557,328], [747,328]],\n[[486,99], [486,333]],\n[[156,40], [488,372]],\n[[323,482], [138,297]],\n[[595,539], [812,756]],\n[[923,861], [377,315]],\n[[934,952], [256,274]],\n[[314,777], [314,12]],\n[[508,47], [508,144]],\n[[888,807], [701,807]],\n[[745,774], [878,907]],\n[[740,716], [740,215]],\n[[62,43], [62,12]],\n[[571,196], [454,196]],\n[[568,107], [408,107]],\n[[549,676], [404,676]],\n[[595,573], [595,970]],\n[[148,168], [193,123]],\n[[763,71], [759,71]],\n[[797,64], [307,64]],\n[[959,984], [32,57]],\n[[457,562], [634,562]],\n[[127,521], [601,47]],\n[[112,296], [112,120]],\n[[148,755], [451,755]],\n[[636,494], [870,494]],\n[[910,242], [945,277]],\n[[912,911], [912,892]],\n[[759,815], [759,314]],\n[[391,285], [391,959]],\n[[455,460], [182,460]],\n[[112,78], [112,385]],\n[[842,179], [842,592]],\n[[236,424], [421,424]],\n[[508,907], [30,907]],\n[[637,219], [34,822]],\n[[503,375], [503,205]],\n[[570,533], [626,533]],\n[[658,11], [658,94]],\n[[179,286], [326,433]],\n[[918,214], [200,932]],\n[[339,887], [81,887]],\n[[794,91], [50,835]],\n[[225,356], [225,261]],\n[[80,160], [80,335]],\n[[148,64], [847,763]],\n[[595,393], [941,393]],\n]"
            ],
            "outputs": [],
            "metadata": {
                "inputCollapsed": true
            }
        },
        {
            "language": "typescript",
            "source": [
                "const part1Matrix = initializeMatrix(1000);\nfillInOverlaps(part1Matrix, part1Lines);\ncalculateDoubleOverlaps(part1Matrix);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m21466\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Part 2"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}